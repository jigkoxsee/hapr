// Code generated by go generate gen.go; DO NOT EDIT.
//go:generate go run gen.go
package hapr

import (
	"golang.org/x/net/html"
	"golang.org/x/net/html/atom"
)

func A(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.A, attrs, children...)
}

func A_(children ...*html.Node) *html.Node {
	return New(atom.A, nil, children...)
}

func Abbr(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Abbr, attrs, children...)
}

func Abbr_(children ...*html.Node) *html.Node {
	return New(atom.Abbr, nil, children...)
}

func Address(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Address, attrs, children...)
}

func Address_(children ...*html.Node) *html.Node {
	return New(atom.Address, nil, children...)
}

func Area(attrs []html.Attribute) *html.Node {
	return New(atom.Area, attrs)
}

func Article(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Article, attrs, children...)
}

func Article_(children ...*html.Node) *html.Node {
	return New(atom.Article, nil, children...)
}

func Aside(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Aside, attrs, children...)
}

func Aside_(children ...*html.Node) *html.Node {
	return New(atom.Aside, nil, children...)
}

func Audio(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Audio, attrs, children...)
}

func Audio_(children ...*html.Node) *html.Node {
	return New(atom.Audio, nil, children...)
}

func B(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.B, attrs, children...)
}

func B_(children ...*html.Node) *html.Node {
	return New(atom.B, nil, children...)
}

func Base(attrs []html.Attribute) *html.Node {
	return New(atom.Base, attrs)
}

func Bdi(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Bdi, attrs, children...)
}

func Bdi_(children ...*html.Node) *html.Node {
	return New(atom.Bdi, nil, children...)
}

func Bdo(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Bdo, attrs, children...)
}

func Bdo_(children ...*html.Node) *html.Node {
	return New(atom.Bdo, nil, children...)
}

func Blockquote(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Blockquote, attrs, children...)
}

func Blockquote_(children ...*html.Node) *html.Node {
	return New(atom.Blockquote, nil, children...)
}

func Body(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Body, attrs, children...)
}

func Body_(children ...*html.Node) *html.Node {
	return New(atom.Body, nil, children...)
}

func Br(attrs []html.Attribute) *html.Node {
	return New(atom.Br, attrs)
}

func Button(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Button, attrs, children...)
}

func Button_(children ...*html.Node) *html.Node {
	return New(atom.Button, nil, children...)
}

func Canvas(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Canvas, attrs, children...)
}

func Canvas_(children ...*html.Node) *html.Node {
	return New(atom.Canvas, nil, children...)
}

func Caption(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Caption, attrs, children...)
}

func Caption_(children ...*html.Node) *html.Node {
	return New(atom.Caption, nil, children...)
}

func Cite(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Cite, attrs, children...)
}

func Cite_(children ...*html.Node) *html.Node {
	return New(atom.Cite, nil, children...)
}

func Code(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Code, attrs, children...)
}

func Code_(children ...*html.Node) *html.Node {
	return New(atom.Code, nil, children...)
}

func Col(attrs []html.Attribute) *html.Node {
	return New(atom.Col, attrs)
}

func Colgroup(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Colgroup, attrs, children...)
}

func Colgroup_(children ...*html.Node) *html.Node {
	return New(atom.Colgroup, nil, children...)
}

func Command(attrs []html.Attribute) *html.Node {
	return New(atom.Command, attrs)
}

func Data(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Data, attrs, children...)
}

func Data_(children ...*html.Node) *html.Node {
	return New(atom.Data, nil, children...)
}

func Datalist(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Datalist, attrs, children...)
}

func Datalist_(children ...*html.Node) *html.Node {
	return New(atom.Datalist, nil, children...)
}

func Dd(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Dd, attrs, children...)
}

func Dd_(children ...*html.Node) *html.Node {
	return New(atom.Dd, nil, children...)
}

func Del(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Del, attrs, children...)
}

func Del_(children ...*html.Node) *html.Node {
	return New(atom.Del, nil, children...)
}

func Details(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Details, attrs, children...)
}

func Details_(children ...*html.Node) *html.Node {
	return New(atom.Details, nil, children...)
}

func Dfn(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Dfn, attrs, children...)
}

func Dfn_(children ...*html.Node) *html.Node {
	return New(atom.Dfn, nil, children...)
}

func Dialog(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Dialog, attrs, children...)
}

func Dialog_(children ...*html.Node) *html.Node {
	return New(atom.Dialog, nil, children...)
}

func Div(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Div, attrs, children...)
}

func Div_(children ...*html.Node) *html.Node {
	return New(atom.Div, nil, children...)
}

func Dl(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Dl, attrs, children...)
}

func Dl_(children ...*html.Node) *html.Node {
	return New(atom.Dl, nil, children...)
}

func Dt(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Dt, attrs, children...)
}

func Dt_(children ...*html.Node) *html.Node {
	return New(atom.Dt, nil, children...)
}

func Em(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Em, attrs, children...)
}

func Em_(children ...*html.Node) *html.Node {
	return New(atom.Em, nil, children...)
}

func Embed(attrs []html.Attribute) *html.Node {
	return New(atom.Embed, attrs)
}

func Fieldset(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Fieldset, attrs, children...)
}

func Fieldset_(children ...*html.Node) *html.Node {
	return New(atom.Fieldset, nil, children...)
}

func Figcaption(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Figcaption, attrs, children...)
}

func Figcaption_(children ...*html.Node) *html.Node {
	return New(atom.Figcaption, nil, children...)
}

func Figure(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Figure, attrs, children...)
}

func Figure_(children ...*html.Node) *html.Node {
	return New(atom.Figure, nil, children...)
}

func Footer(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Footer, attrs, children...)
}

func Footer_(children ...*html.Node) *html.Node {
	return New(atom.Footer, nil, children...)
}

func Form(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Form, attrs, children...)
}

func Form_(children ...*html.Node) *html.Node {
	return New(atom.Form, nil, children...)
}

func H1(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.H1, attrs, children...)
}

func H1_(children ...*html.Node) *html.Node {
	return New(atom.H1, nil, children...)
}

func H2(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.H2, attrs, children...)
}

func H2_(children ...*html.Node) *html.Node {
	return New(atom.H2, nil, children...)
}

func H3(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.H3, attrs, children...)
}

func H3_(children ...*html.Node) *html.Node {
	return New(atom.H3, nil, children...)
}

func H4(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.H4, attrs, children...)
}

func H4_(children ...*html.Node) *html.Node {
	return New(atom.H4, nil, children...)
}

func H5(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.H5, attrs, children...)
}

func H5_(children ...*html.Node) *html.Node {
	return New(atom.H5, nil, children...)
}

func H6(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.H6, attrs, children...)
}

func H6_(children ...*html.Node) *html.Node {
	return New(atom.H6, nil, children...)
}

func Head(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Head, attrs, children...)
}

func Head_(children ...*html.Node) *html.Node {
	return New(atom.Head, nil, children...)
}

func Header(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Header, attrs, children...)
}

func Header_(children ...*html.Node) *html.Node {
	return New(atom.Header, nil, children...)
}

func Hgroup(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Hgroup, attrs, children...)
}

func Hgroup_(children ...*html.Node) *html.Node {
	return New(atom.Hgroup, nil, children...)
}

func Hr(attrs []html.Attribute) *html.Node {
	return New(atom.Hr, attrs)
}

func Html(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Html, attrs, children...)
}

func Html_(children ...*html.Node) *html.Node {
	return New(atom.Html, nil, children...)
}

func I(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.I, attrs, children...)
}

func I_(children ...*html.Node) *html.Node {
	return New(atom.I, nil, children...)
}

func Iframe(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Iframe, attrs, children...)
}

func Iframe_(children ...*html.Node) *html.Node {
	return New(atom.Iframe, nil, children...)
}

func Img(attrs []html.Attribute) *html.Node {
	return New(atom.Img, attrs)
}

func Input(attrs []html.Attribute) *html.Node {
	return New(atom.Input, attrs)
}

func Ins(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Ins, attrs, children...)
}

func Ins_(children ...*html.Node) *html.Node {
	return New(atom.Ins, nil, children...)
}

func Kbd(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Kbd, attrs, children...)
}

func Kbd_(children ...*html.Node) *html.Node {
	return New(atom.Kbd, nil, children...)
}

func Keygen(attrs []html.Attribute) *html.Node {
	return New(atom.Keygen, attrs)
}

func Label(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Label, attrs, children...)
}

func Label_(children ...*html.Node) *html.Node {
	return New(atom.Label, nil, children...)
}

func Legend(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Legend, attrs, children...)
}

func Legend_(children ...*html.Node) *html.Node {
	return New(atom.Legend, nil, children...)
}

func Li(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Li, attrs, children...)
}

func Li_(children ...*html.Node) *html.Node {
	return New(atom.Li, nil, children...)
}

func Link(attrs []html.Attribute) *html.Node {
	return New(atom.Link, attrs)
}

func Main(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Main, attrs, children...)
}

func Main_(children ...*html.Node) *html.Node {
	return New(atom.Main, nil, children...)
}

func Map(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Map, attrs, children...)
}

func Map_(children ...*html.Node) *html.Node {
	return New(atom.Map, nil, children...)
}

func Mark(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Mark, attrs, children...)
}

func Mark_(children ...*html.Node) *html.Node {
	return New(atom.Mark, nil, children...)
}

func Menu(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Menu, attrs, children...)
}

func Menu_(children ...*html.Node) *html.Node {
	return New(atom.Menu, nil, children...)
}

func Menuitem(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Menuitem, attrs, children...)
}

func Menuitem_(children ...*html.Node) *html.Node {
	return New(atom.Menuitem, nil, children...)
}

func Meta(attrs []html.Attribute) *html.Node {
	return New(atom.Meta, attrs)
}

func Meter(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Meter, attrs, children...)
}

func Meter_(children ...*html.Node) *html.Node {
	return New(atom.Meter, nil, children...)
}

func Nav(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Nav, attrs, children...)
}

func Nav_(children ...*html.Node) *html.Node {
	return New(atom.Nav, nil, children...)
}

func Noscript(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Noscript, attrs, children...)
}

func Noscript_(children ...*html.Node) *html.Node {
	return New(atom.Noscript, nil, children...)
}

func Object(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Object, attrs, children...)
}

func Object_(children ...*html.Node) *html.Node {
	return New(atom.Object, nil, children...)
}

func Ol(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Ol, attrs, children...)
}

func Ol_(children ...*html.Node) *html.Node {
	return New(atom.Ol, nil, children...)
}

func Optgroup(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Optgroup, attrs, children...)
}

func Optgroup_(children ...*html.Node) *html.Node {
	return New(atom.Optgroup, nil, children...)
}

func Option(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Option, attrs, children...)
}

func Option_(children ...*html.Node) *html.Node {
	return New(atom.Option, nil, children...)
}

func Output(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Output, attrs, children...)
}

func Output_(children ...*html.Node) *html.Node {
	return New(atom.Output, nil, children...)
}

func P(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.P, attrs, children...)
}

func P_(children ...*html.Node) *html.Node {
	return New(atom.P, nil, children...)
}

func Param(attrs []html.Attribute) *html.Node {
	return New(atom.Param, attrs)
}

func Picture(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Picture, attrs, children...)
}

func Picture_(children ...*html.Node) *html.Node {
	return New(atom.Picture, nil, children...)
}

func Pre(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Pre, attrs, children...)
}

func Pre_(children ...*html.Node) *html.Node {
	return New(atom.Pre, nil, children...)
}

func Progress(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Progress, attrs, children...)
}

func Progress_(children ...*html.Node) *html.Node {
	return New(atom.Progress, nil, children...)
}

func Q(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Q, attrs, children...)
}

func Q_(children ...*html.Node) *html.Node {
	return New(atom.Q, nil, children...)
}

func Rp(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Rp, attrs, children...)
}

func Rp_(children ...*html.Node) *html.Node {
	return New(atom.Rp, nil, children...)
}

func Rt(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Rt, attrs, children...)
}

func Rt_(children ...*html.Node) *html.Node {
	return New(atom.Rt, nil, children...)
}

func Ruby(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Ruby, attrs, children...)
}

func Ruby_(children ...*html.Node) *html.Node {
	return New(atom.Ruby, nil, children...)
}

func S(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.S, attrs, children...)
}

func S_(children ...*html.Node) *html.Node {
	return New(atom.S, nil, children...)
}

func Samp(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Samp, attrs, children...)
}

func Samp_(children ...*html.Node) *html.Node {
	return New(atom.Samp, nil, children...)
}

func Script(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Script, attrs, children...)
}

func Script_(children ...*html.Node) *html.Node {
	return New(atom.Script, nil, children...)
}

func Section(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Section, attrs, children...)
}

func Section_(children ...*html.Node) *html.Node {
	return New(atom.Section, nil, children...)
}

func Select(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Select, attrs, children...)
}

func Select_(children ...*html.Node) *html.Node {
	return New(atom.Select, nil, children...)
}

func Slot(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Slot, attrs, children...)
}

func Slot_(children ...*html.Node) *html.Node {
	return New(atom.Slot, nil, children...)
}

func Small(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Small, attrs, children...)
}

func Small_(children ...*html.Node) *html.Node {
	return New(atom.Small, nil, children...)
}

func Source(attrs []html.Attribute) *html.Node {
	return New(atom.Source, attrs)
}

func Span(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Span, attrs, children...)
}

func Span_(children ...*html.Node) *html.Node {
	return New(atom.Span, nil, children...)
}

func Strong(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Strong, attrs, children...)
}

func Strong_(children ...*html.Node) *html.Node {
	return New(atom.Strong, nil, children...)
}

func Style(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Style, attrs, children...)
}

func Style_(children ...*html.Node) *html.Node {
	return New(atom.Style, nil, children...)
}

func Sub(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Sub, attrs, children...)
}

func Sub_(children ...*html.Node) *html.Node {
	return New(atom.Sub, nil, children...)
}

func Summary(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Summary, attrs, children...)
}

func Summary_(children ...*html.Node) *html.Node {
	return New(atom.Summary, nil, children...)
}

func Sup(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Sup, attrs, children...)
}

func Sup_(children ...*html.Node) *html.Node {
	return New(atom.Sup, nil, children...)
}

func Table(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Table, attrs, children...)
}

func Table_(children ...*html.Node) *html.Node {
	return New(atom.Table, nil, children...)
}

func Tbody(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Tbody, attrs, children...)
}

func Tbody_(children ...*html.Node) *html.Node {
	return New(atom.Tbody, nil, children...)
}

func Td(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Td, attrs, children...)
}

func Td_(children ...*html.Node) *html.Node {
	return New(atom.Td, nil, children...)
}

func Template(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Template, attrs, children...)
}

func Template_(children ...*html.Node) *html.Node {
	return New(atom.Template, nil, children...)
}

func Textarea(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Textarea, attrs, children...)
}

func Textarea_(children ...*html.Node) *html.Node {
	return New(atom.Textarea, nil, children...)
}

func Tfoot(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Tfoot, attrs, children...)
}

func Tfoot_(children ...*html.Node) *html.Node {
	return New(atom.Tfoot, nil, children...)
}

func Th(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Th, attrs, children...)
}

func Th_(children ...*html.Node) *html.Node {
	return New(atom.Th, nil, children...)
}

func Thead(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Thead, attrs, children...)
}

func Thead_(children ...*html.Node) *html.Node {
	return New(atom.Thead, nil, children...)
}

func Time(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Time, attrs, children...)
}

func Time_(children ...*html.Node) *html.Node {
	return New(atom.Time, nil, children...)
}

func Title(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Title, attrs, children...)
}

func Title_(children ...*html.Node) *html.Node {
	return New(atom.Title, nil, children...)
}

func Tr(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Tr, attrs, children...)
}

func Tr_(children ...*html.Node) *html.Node {
	return New(atom.Tr, nil, children...)
}

func Track(attrs []html.Attribute) *html.Node {
	return New(atom.Track, attrs)
}

func U(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.U, attrs, children...)
}

func U_(children ...*html.Node) *html.Node {
	return New(atom.U, nil, children...)
}

func Ul(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Ul, attrs, children...)
}

func Ul_(children ...*html.Node) *html.Node {
	return New(atom.Ul, nil, children...)
}

func Var(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Var, attrs, children...)
}

func Var_(children ...*html.Node) *html.Node {
	return New(atom.Var, nil, children...)
}

func Video(attrs []html.Attribute, children ...*html.Node) *html.Node {
	return New(atom.Video, attrs, children...)
}

func Video_(children ...*html.Node) *html.Node {
	return New(atom.Video, nil, children...)
}

func Wbr(attrs []html.Attribute) *html.Node {
	return New(atom.Wbr, attrs)
}
